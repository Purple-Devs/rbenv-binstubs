#!/usr/bin/env bash
#
# Summary: Shows bundles tracked by rbenv-binstubs plugin
#
# Usage: rbenv bundles
#
# Shows bundle path and associated binstub directory (if present)
#

set -e
[ -n "$RBENV_DEBUG" ] && set -x

show_details()
{
  local root
  local potential_path
  local global_bundle_config
  root="$1"
  potential_path="$root/bin"
  global_bundle_config=${BUNDLE_CONFIG:-$HOME/.bundle/config}
  relative_path="bin"
  manually_created=' (only manually created binaries)'
  if [ -n "$BUNDLE_BIN" ]; then
    manually_created=''
    case "$BUNDLE_BIN" in
    /*)
        potential_path="$BUNDLE_BIN"
        relative_path="$BUNDLE_BIN"
        ;;
    *)
        potential_path="$root/$BUNDLE_BIN"
        relative_path="$BUNDLE_BIN"
        ;;
    esac
  else
    if [ -f "$global_bundle_config" ]; then
      while read key value 
      do
        case "$key" in
        'BUNDLE_BIN:')
            manually_created=''
            case "$value" in
            '"'/*)
                relative_path="${value%'"'}"
                relative_path="${relative_path#'"'}"
                potential_path="$relative_path"
                ;;
            '"'*)
                relative_path="${value%'"'}"
                relative_path="${relative_path#'"'}"
                potential_path="$root/$relative_path"
                ;;
            /*)
                potential_path="$value"
                relative_path="$value"
                ;;
            *)
                potential_path="$root/$value"
                relative_path="$value"
                ;;
            esac
            break
            ;;
        esac
      done < "$global_bundle_config"
    fi
  fi
  if [ -f "$root/.bundle/config" ]; then
    while read key value 
    do
      case "$key" in
      'BUNDLE_BIN:')
          manually_created=''
          case "$value" in
          '"'/*)
              relative_path="${value%'"'}"
              relative_path="${relative_path#'"'}"
              potential_path="$relative_path"
              ;;
          '"'*)
              relative_path="${value%'"'}"
              relative_path="${relative_path#'"'}"
              potential_path="$root/$relative_path"
              ;;
          /*)
              potential_path="$value"
              relative_path="$value"
              ;;
          *)
              potential_path="$root/$value"
              relative_path="$value"
              ;;
          esac
          break
          ;;
      esac
    done < "$root/.bundle/config"
  fi
  if [ ! -d "$potential_path" ]; then
    manually_created=' (missing)'
  fi
  echo "$root: $relative_path$manually_created"
}

show_bundles ()
{
  # update the list of bundles to remove any stale ones
  if [ -s ${RBENV_ROOT}/bundles ]; then
    OLDIFS="${IFS-$' \t\n'}"
    IFS=$'\n' bundles=(`cat ${RBENV_ROOT}/bundles`)
    IFS="$OLDIFS"
    for bundle in "${bundles[@]}"; do
      if [ -f "$bundle/Gemfile" ]; then
        show_details "$bundle"
      else
        echo "Gemfile missing from $bundle - will be dropped at next rehash" >&2
      fi
    done
  else
    echo "No bundles registered" >&2
  fi
}

show_bundles

